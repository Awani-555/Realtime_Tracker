<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Login</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"
  />
  <style>
    body, html {
      height: 100%;
      margin: 0;
      position: relative;
      font-family: 'Inter', sans-serif;
      color: #f9fafb;
    }
    .bg-image {
      position: fixed;
      top: 0; left: 0;
      width: 100%;
      height: 100%;
      background-image: url("https://visibleearth.nasa.gov/images/55167/earths-city-lights");
      background-size: cover;
      background-position: center;
      z-index: -2;
    }
    .overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.6);
      z-index: -1;
    }
    .top-right-register {
      position: fixed;
      top: 1.5rem;
      right: 2rem;
      z-index: 50;
      font-weight: 600;
      color: #3b82f6; /* Tailwind blue-500 */
      background: rgba(0,0,0,0.5);
      padding: 0.5rem 1rem;
      border-radius: 0.375rem;
      box-shadow: 0 8px 15px rgba(0,0,0,0.3);
      transition: all 0.3s ease;
      user-select: none;
      font-size: 1rem;
    }
    .top-right-register:hover {
      background: #3b82f6;
      color: #f9fafb;
      transform: scale(1.05);
      box-shadow: 0 15px 20px rgba(59, 130, 246, 0.5);
    }
    .form-container {
      position: relative;
      z-index: 10;
      max-width: 400px;
      margin: 8rem auto;
      padding: 2.5rem 2rem;
      background: rgba(31, 41, 55, 0.85);
      border-radius: 1rem;
      box-shadow: 0 8px 30px rgba(0,0,0,0.7);
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
    }
    input, button {
      transition: all 0.3s ease;
    }
    input:focus {
      outline: none;
      box-shadow: 0 0 0 3px #3b82f6;
      border-color: #3b82f6;
      background-color: #1f2937;
      color: #d1d5db;
    }
    button:hover {
      background-color: #2563eb;
      transform: scale(1.05);
      box-shadow: 0 12px 15px rgba(37,99,235,0.6);
    }
  </style>
</head>
<body>
  <div class="bg-image"></div>
  <div class="overlay"></div>

  <a href="/register" class="top-right-register animate__animated animate__fadeInDown animate__delay-1s">
    Create Account
  </a>

  <div class="form-container animate__animated animate__fadeInUp animate__delay-1s">
    <h1 class="text-3xl font-extrabold mb-6 text-center">Welcome Back</h1>
    <form id="loginForm" class="space-y-6" novalidate>
      <input
        type="text"
        name="username"
        placeholder="Username or Email"
        required
        class="w-full px-4 py-3 rounded bg-gray-800 border border-gray-700 placeholder-gray-400"
      />
      <input
        type="password"
        name="password"
        placeholder="Password"
        required
        minlength="6"
        class="w-full px-4 py-3 rounded bg-gray-800 border border-gray-700 placeholder-gray-400"
      />
      <button
        type="submit"
        class="w-full bg-blue-500 py-3 rounded font-semibold text-lg"
      >
        Login
      </button>
    </form>
    <p class="mt-4 text-center text-sm text-gray-300">
      <a href="/forgot-password" class="text-blue-400 hover:underline">
        Forgot your password?
      </a>
    </p>
    <p id="alertBox" class="mt-4 text-center text-red-400 hidden"></p>
  </div>

  <script>
    const loginForm = document.getElementById('loginForm');
    const alertBox = document.getElementById('alertBox');

    loginForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      alertBox.classList.add('hidden');
      alertBox.textContent = '';

      const formData = new FormData(loginForm);
      const data = {
        username: formData.get('username').trim(),
        password: formData.get('password'),
      };

      if (!data.username || !data.password) {
        alertBox.textContent = 'Please enter both username and password.';
        alertBox.classList.remove('hidden');
        return;
      }

      try {
        const res = await fetch('/api/auth/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        const result = await res.json();
        if (res.ok) {
          localStorage.setItem('token', result.token);
          alert('Login successful! Redirecting...');
          window.location.href = '/';
        } else {
          alertBox.textContent = result.error || 'Invalid credentials';
          alertBox.classList.remove('hidden');
        }
      } catch (err) {
        alertBox.textContent = 'Server error. Please try later.';
        alertBox.classList.remove('hidden');
      }
    });
  </script>
</body>
</html>